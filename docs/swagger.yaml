basePath: /api/v1
definitions:
  handlers.StudentRequest:
    properties:
      age:
        type: integer
      name:
        type: string
    required:
    - age
    - name
    type: object
  handlers.UserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.UserResponse:
    properties:
      email:
        type: string
      id:
        type: string
    type: object
  models.Student:
    properties:
      age:
        type: integer
      created_by:
        type: string
      created_on:
        type: string
      id:
        type: string
      name:
        type: string
      updated_by:
        type: string
      updated_on:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a Student Management API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Student API
  version: "1.0"
paths:
  /api/v1/students:
    get:
      description: Retrieves a list of all students
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Student'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get all students
      tags:
      - Students
    post:
      consumes:
      - application/json
      description: Endpoint for creating a new student
      parameters:
      - description: Student data
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/handlers.StudentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.StudentRequest'
      security:
      - ApiKeyAuth: []
      summary: Create a new student
      tags:
      - Students
  /api/v1/students/{id}:
    delete:
      description: Endpoint for deleting a student by ID
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete a student
      tags:
      - Students
    get:
      description: Retrieves a student by their ID
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Student'
      security:
      - ApiKeyAuth: []
      summary: Get student by ID
      tags:
      - Students
    put:
      consumes:
      - application/json
      description: Endpoint for updating student details
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      - description: Student data
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/handlers.StudentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.StudentRequest'
      security:
      - ApiKeyAuth: []
      summary: Update a student
      tags:
      - Students
  /api/v1/users/login:
    post:
      consumes:
      - application/json
      description: Endpoint for user login
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/handlers.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.UserResponse'
      summary: User login
      tags:
      - Users
  /api/v1/users/signup:
    post:
      consumes:
      - application/json
      description: Endpoint for user signup
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.UserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.UserResponse'
      summary: Register a new user
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
